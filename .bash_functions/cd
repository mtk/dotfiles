_cdprint()
{
	echo -e "$@"
}

cd()
{
	typeset -i cdlen i lines
	typeset t
	
	if [ $# -eq 0 ]
	then
		set -- $HOME
	fi
	
	if [ "$CDHISTFILE" -a -r "$CDHISTFILE" ] # if directory history exists
	then
		typeset CDHIST
		i=-1
		while read -r t			# read directory history file
		do
			CDHIST[i=i+1]=$t
		done <$CDHISTFILE
	fi
	
	if [ "${CDHIST[0]}" != "$PWD" -a "$PWD" != "" ]
	then
		_cdins				# insert $PWD into cd history
	fi
	
	cdlen=${#CDHIST[*]}			# number of elements in history
	
	case "$1" in
	-)					# cd to new dir
		if [ "$OLDPWD" = "" ] && ((cdlen>1))
		then
			builtin cd ${CDHIST[1]}
		else
			builtin cd "$1"
		fi
		;;
	-l)					# _cdprint directory list on screen
		((lines=LINES-2))
		((i=lines<cdlen?lines:cdlen))
		while (((i=i-1)>=0))
		do
			num=$i
			'_cdprint' "$num ${CDHIST[i]}"
		done
		return
		;;
	-ll)					# _cdprint directory list
		((i=cdlen))
		while (((i=i-1)>=0))
		do
			num=$i
			'_cdprint' "$num ${CDHIST[i]}"
		done
		return
		;;
	[0-9]|[0-9][0-9]|-[0-9]|-[0-9][0-9])			# cd to dir in list (used to be -[0-9] but this is easier)
		if (((i=${1#-})<cdlen))
		then
			'_cdprint' ${CDHIST[i]}
			builtin cd ${CDHIST[i]}
		else
			'_cdprint' $1
			builtin cd $1
		fi
		;;
	-*)					# cd to matched dir in list
		t=${1#-}
		i=1
		while ((i<cdlen))
		do
			case ${CDHIST[i]} in
			*$t*)
				'_cdprint' ${CDHIST[i]}
				builtin cd ${CDHIST[i]}
				break
				;;
			esac
			((i=i+1))
		done
		if ((i>=cdlen))
		then
			'_cdprint' $1
			builtin cd $1
		fi
		;;
	*) # maybe cd to new dir
	   # subsume cdable vars and let 'cd VAR/sub1/sub2' work.
	   # could be easily changed to replace any component
	   # which has a matching env var.
	   # used to be simple but recent bash version made ${!foo} fail with an error when foo has no value
	    if [[ $1 != /* ]]; then
		local -a parts
		parts=($(split '/' $1))
		headref=${parts[0]}
		if [[ "$headref" != @($CDVARIGNORE) && "$headref" =~ ^[A-Za-z]([A-Za-z_0-9]+)?$ ]]; then
		    indirect=$(eval echo "\${$headref}")
		    if [[ -n "$indirect" && "$indirect" != '$' ]]; then
			parts[0]=$indirect
		    fi 
		    set -- $(join '/' ${parts[*]})
		fi
	    fi

	    if [[ -f "$1" ]]; then
		set -- $(dp "$1")
	    fi

            builtin cd $1
	;;
	esac

	_cdins					# insert $PWD into cd history
	
	if [ "$CDHISTFILE" ]
	then
		cdlen=${#CDHIST[*]}		# number of elements in history

		i=0
		while ((i<cdlen))
		do
			echo ${CDHIST[i]}	# update directory history
			((i=i+1))
		done >$CDHISTFILE
	fi

	xtitle ${HOSTNAME%%.*}:$PWD
}
	
_cdins()					# insert $PWD into cd history
{						# meant to be called only by cd
	typeset -i i

	i=0

	while (( i < ${#CDHIST[*]} ))		# see if dir is already in list
	do
		if [ "${CDHIST[$i]}" = "$PWD" ]
		then
			break
		fi
		((i=i+1))
	done

	if (( i>CDHISTSIZE ))				# limit max size of list
	then
		i=CDHISTSIZE
	fi

	while (((i=i-1)>=0))			# bump old dirs in list
	do
		CDHIST[i+1]=${CDHIST[i]}
	done

	CDHIST[0]=$PWD				# insert new directory in list
}

# Local Variables:
# mode: sh
# End:

