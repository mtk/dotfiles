#!/usr/local/bin/perl

use strict;
use Getopt::Long;
use vars qw($opt_a);

sub dsplit ($)
{
  my @path = split m@/@, shift;
  shift @path unless $path[0];
  @path;
}

sub resolve_links ($)
{
  my $base;
  my @path = dsplit shift;

  while (@path)
    {
      my $link = readlink $base . '/' . $path[0];

      if ($link)
	{
	  shift @path;
	  unshift @path, dsplit $link;
	  $base = undef if $link =~ m@^/@;
	}
      else
	{
	  $base .= '/' . shift @path;
	}
    }

  $base;
}

my %seen;

sub unique ($)
{
  my $dir = shift;
  $dir = $ENV{PWD} . '/' . $dir unless $dir =~ m@^/@;
  return 0 unless -d $dir;
  $dir = resolve_links $dir;
  return 0 if exists $seen{$dir};
  $seen{$dir} = 1;
  return 1;
}

sub subdirs (@)
{
  my @children;

  foreach my $parent (@_)
    {
      next unless opendir P, $parent;
      push @children, grep -d, map { "$parent/$_" } grep /^[^.]/, readdir P;
      closedir P;
    }

  return @children;
}

GetOptions ('a');
my $args = join '|', @ARGV;

foreach my $dir (grep unique $_, subdirs (split /:/, $ENV{'MANPATH'}))
{
  opendir D, $dir;
  foreach my $file (map { "$dir/$_" } grep /^[^.]/, readdir D)
    {
      print $file, "\n"
	if not @ARGV or ($opt_a ? $file : (split m@/@, $file)[-1]) =~ /$args/o;
    }
}



# Local Variables:
# mode: perl
# End:

